
README.ahelp
============

NOTE:
  the "dist" type, that generated HTML pages for the
  distribution, is not used in CIAO 4, so should be
  removed from the code. This may simplify some things
  and allow others.

NOTE:
  the PDF generation will hang if run on a non-networked
  system, since we look for the CXC logo from the main
  site rather than a local copy (possibly other info
  too). This could be changed.

Steps to publishing ahelp files on the web site:

 1) How do we generate the ahelp databases?
 2) How do we create the ahelp index files?
 3) How do we create the individual ahelp pages?

1) How do we generate the ahelp databases?

In order for the ahelp tags to work, a "database" file
has to be generated that combines information about
keys, concepts, and see-also sections. The use of the
word database here is generous, as it is really just
an XML file.

The location of the database is determined by the
%ahelpindexdir setting in the config.dat file, for instance:

%ahelpindexdir=live /data/da/Docs/ciaoweb/published/40beta/live/ahelp/
%ahelpindexdir=test /data/da/Docs/ciaoweb/published/40beta/test/ahelp/
%ahelpindexdir=trial /data/da/Docs/ciaoweb/published/40beta/test/ahelp/

The same database file is used by the CIAO, ChIPS, and Sherpa sites,
so the config lines should be the same for the three sites here.

The ahelp files (in XML format) are given by the %ahelpfiles
setting in the config.dat file, for instance:

%ahelpfiles=live /data/da/Docs/sxml_manuals/crates/4.0/GENERATED/webxml/
%ahelpfiles=test /data/da/Docs/sxml_manuals/crates/4.0/GENERATED/webxml/
%ahelpfiles=trial /proj/xena/ciao_bt/sun/

These directories should contain doc/xml/*.xml files and will also
find files in contrib/doc/xml/*xml

For CIAO 4, we have to create separate S-Lang and Python specific
versions of the ahelp files - at least for those with multiple
language support. Liz has code to do this <insert instructions here>.
From now on we assume the ahelp XML files have been so processed.

Note that all the ahelp files are assumed to be in the same directory,
or rather directory pointed to by the %ahelpfiles directive. So,
apart from the post processing done by Liz to split up the 
multi-language (ie S-Lang and Python) versions, %ahelpfiles could
point to the value of the $ASCDS_INSTALL env. variable.

The program to use is mk_ahelp_setup.pl

# Usage:
#   mk_ahelp_setup.pl
#     --config=name
#     --type=test|live|trial|dist
#     --verbose
#
#   The default is --type=test, which sets up for test web site.
#   The live option sets things up for the live (ie cxc.harvard.edu) site.
#   The type=dist is for people building the HTML pages for the
#   CIAO distribution.
#   Don't use the trial option unless you know what it does.
#
#   The --config option gives the path to the configuration file; this
#   defaults to config.dat in the same directory as the script.
#
#   The --verbose option is useful for testing/debugging the code.

This script should be run in the ahelp/ directory of the CIAO web site,
such as /data/da/Docs/ciaoweb/40beta/ahelp/. If run from any other site,
such as ChIPS or Sherpa, it will die with an error.

2) How do we create the ahelp index files?

Once step 1 has been run, we use the mk_ahelp_indexes.pl script,
which should be run in the <site>/<version>/<type>/ahelp/
directories. Unlike mk_ahelp_setup.pl, this script will run
in the ChIPS and Sherpa web sites as well as the CIAO one.

# Usage:
#   mk_ahelp_indexes.pl
#     --config=name
#     --type=test|live|trial|dist
#     --verbose

3) How do we create the individual ahelp pages?

After step 2, you use mk_ahelp_pages.pl to create the individual
pages. As with mk_ahelp_indexes.pl, this script will run in the
ChIPS and Sherpa web sites as well as the CIAO one.

# Usage:
#   mk_ahelp_pages.pl [name1 ... namen]
#     --config=name
#     --type=test|live|trial|dist
#     --verbose

It must be run from the same directory as the previous programs. If
called with no names then all xml files in the doc/xml/ and contrib/doc/xml
directories will be processed (base location given by the %ahelpfiles
directive in the config.dat file), otherwise just those named file(s)
will be processed. When listing individual files the full path to these
files should be included (this is to allow using updated or hacked files
in case the need arises).

